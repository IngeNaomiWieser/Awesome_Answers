<h1>New Question</h1>

<%# the `form_for` helper method expect you to give it an ActiveRecord object as
    its first argument. If the object is not persisted (Question.new) then the
    form will use the default URL to the create action in the associated
    controller for its `action` attribute. In this case, the `action` will be
    the url for the `create` action to `questions` controller which is
    `questions_path` %>
<!-- <%= @question.errors.full_messages.join(', ') %>
<%= form_for @question do |f| %>
  <div class="form-group">
    <%= f.label :title %>
    <%# this f.text_field will generate an `input` HTML tag with the proper
        `name` attribute which will be `question[title]` in this case. It will
        also set the value to the input field to whatever the @question object
        has preset for that perticular attribute (in this title) %>
    <%= f.text_field :title, class: 'form-control' %>
  </div>
  <div class="form-control">
    <%= f.label :body %>
    <%= f.text_area :body, class: 'form-control' %>
  </div>
  <%= f.submit class: 'btn btn-primary' %>
<% end %> -->


<!-- Instead of the form above and in the edit file, we refactor it and put it in _form.html.erb. We can just run the code below instead. Render is expecting a partial which is a view file name that starts with '_'. When you don't provide a full path for the partial then rails is going to assume that the partial exists in the same folder as this file.  -->
<%= render 'form' %>

<!-- If the form is in another folder, do something like: render '/welcome/form'. We don't need the _ in front of it.  -->
